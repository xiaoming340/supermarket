<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码
		连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/Supermaket"
		p:user="root"
		p:password="83618273011"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20"/>
		
	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/xiaoming/domain/Employee.hbm.xml</value>
				<value>com/xiaoming/domain/Goods.hbm.xml</value>
				<value>com/xiaoming/domain/Purchase.hbm.xml</value>
				<value>com/xiaoming/domain/PurchaseEntry.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<value>
			hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
			hibernate.hbm2ddl.auto=update
			hibernate.show_sql=true
			hibernate.format_sql=true;
			#开启二级缓存
			hibernate.cache.use_second_level_cache=true
			#设置二级缓存的提供者
			hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
			</value>
		</property>
	</bean>
	
	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类
	该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现
	并注入SessionFactory的引用 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>
	
	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配empManager和mgrManager两个Bean的所有方法的执行 -->
		<aop:pointcut id="ccPointcut" expression="bean(loginService) || bean(empMagService) || bean(goodsService)"/>
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ccPointcut"/>
	</aop:config>
	
	<bean id="loginService" class="com.xiaoming.service.LoginService" lazy-init="true">
		<property name="employeeDao" ref="employeeDao"/>
	</bean>
	
	<bean id="empMagService" class="com.xiaoming.service.EmployeeManageService" lazy-init="true">
		<property name="employeeDao" ref="employeeDao"/>
	</bean>
	
	<bean id="purchaseService" class="com.xiaoming.service.PurchaseService" lazy-init="true">
		<property name="goodsDao" ref="goodsDao"/>
		<property name="purchaseDao" ref="purchaseDao"/>
		<property name="purchaseEntryDao" ref="purchaseEntryDao"/>
	</bean>
	
	<bean id="goodsService" class="com.xiaoming.service.GoodsService" lazy-init="true">
		<property name="goodsDao" ref="goodsDao"/>
	</bean>
	
</beans>



